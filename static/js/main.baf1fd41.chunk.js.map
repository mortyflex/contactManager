{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","pages/About.js","pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","isLoading","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","email","phone","name","className","style","cursor","onClick","float","react_router_dom","to","Contacts","react","fontWeight","contacts_Contact","role","aria-hidden","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","history","newContact","preventDefault","abrupt","post","push","_this$state2","fontSize","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","Navbar","bg","expand","variant","Brand","href","Toggle","aria-controls","Collapse","Nav","About","textAlign","NotFound","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.baf1fd41.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    isLoading: false,\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data, isLoading: true });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    const { email, phone, name, id } = this.props.contact;\n\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                &nbsp;\n                <i\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() =>\n                    this.setState({ showContactInfo: !showContactInfo })\n                  }\n                  className={\n                    !showContactInfo\n                      ? \"far fa-xs fa-caret-square-down\"\n                      : \"far fa-xs fa-caret-square-up\"\n                  }\n                />\n                &nbsp;\n                <i\n                  onClick={() => this.onDeleteClick(id, dispatch)}\n                  style={{\n                    cursor: \"pointer\",\n                    float: \"right\"\n                  }}\n                  className=\" fas fa-xs fa-trash-alt text-danger\"\n                />\n                <Link to={`/contact/edit/${id}`}>\n                  <i\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\"\n                    }}\n                    className=\"fas fa-xs fa-pencil-alt mr-2\"\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    <strong>Email:</strong>\n                    &nbsp;\n                    {email}\n                  </li>\n                  <li className=\"list-group-item\">\n                    <strong>Phone:</strong>\n                    &nbsp;\n                    {phone}\n                  </li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component, Fragment } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { isLoading, contacts } = value;\n          return isLoading ? (\n            <Fragment>\n              <h1 style={{ fontWeight: \"300\" }} className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </Fragment>\n          ) : (\n            <div className=\"d-flex align-items-center mt-5\">\n              <strong>Loading...</strong>\n              <div\n                className=\"spinner-border text-danger ml-auto\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              />\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport { Link } from \"react-router-dom\";\n\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n    const { history } = this.props;\n\n    //Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is Required!\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is Required!\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is Required!\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      `https://jsonplaceholder.typicode.com/users`,\n      newContact\n    );\n\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    //clear state\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\n\n    history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div\n                style={{ fontSize: \"35px\", fontWeight: \"300\" }}\n                className=\"card-header bg-light \"\n              >\n                <span className=\"text-danger\">Add</span> Contact\n              </div>\n\n              <div className=\"card-body\">\n                <form onSubmit={e => this.onSubmit(dispatch, e)}>\n                  <TextInputGroup\n                    label=\"Name:\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email:\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone:\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone Number...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    style={{\n                      fontSize: \"21px\",\n                      fontWeight: \"300\",\n                      float: \"right\"\n                    }}\n                    type=\"submit\"\n                    value=\"   ADD   \"\n                    className=\"btn btn-sm btn-primary \"\n                  />\n                  <Link to=\"/\">\n                    <input\n                      style={{\n                        fontSize: \"19px\",\n                        fontWeight: \"300\",\n                        float: \"left\"\n                      }}\n                      type=\"submit\"\n                      value=\"CANCEL\"\n                      className=\"btn btn-danger btn-md mt-1\"\n                    />\n                  </Link>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport { Link } from \"react-router-dom\";\n\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n    const { history } = this.props;\n\n    //Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is Required!\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is Required!\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is Required!\" } });\n      return;\n    }\n\n    const updContact = {\n      name: name,\n      email: email,\n      phone: phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    //clear state\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\n\n    history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div\n                style={{ fontSize: \"35px\", fontWeight: \"300\" }}\n                className=\"card-header bg-light \"\n              >\n                <span className=\"text-danger\">Update</span> Contact\n              </div>\n\n              <div className=\"card-body\">\n                <form onSubmit={e => this.onSubmit(dispatch, e)}>\n                  <TextInputGroup\n                    label=\"Name:\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email:\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone:\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone Number...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    style={{\n                      fontSize: \"21px\",\n                      fontWeight: \"300\",\n                      float: \"right\"\n                    }}\n                    type=\"submit\"\n                    value=\"UPDATE\"\n                    className=\"btn btn-sm btn-primary \"\n                  />\n                  <Link to=\"/\">\n                    <input\n                      style={{\n                        fontSize: \"19px\",\n                        fontWeight: \"300\",\n                        float: \"left\"\n                      }}\n                      type=\"submit\"\n                      value=\"CANCEL\"\n                      className=\"btn btn-danger btn-md mt-1\"\n                    />\n                  </Link>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nconst Header = ({ branding }) => {\n  return (\n    <Navbar bg=\"danger\" expand=\"md\" variant=\"dark\">\n      <Navbar.Brand href=\"/\">\n        <i className=\"far fa-2x fa-address-book\" /> {branding}\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto \">\n          <Link to=\"/\" className=\"nav-link\">\n            <i className=\"fas fa-home\" /> Home\n          </Link>\n          <Link to=\"/about\" className=\"nav-link\">\n            <i className=\"far fa-question-circle\" /> About\n          </Link>\n          <Link to=\"/contact/add\" className=\"nav-link\">\n            <i className=\"fas fa-lg fa-user-plus\" />\n          </Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from \"react\";\n\nconst About = () => {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h4 className=\"display-4\">About Contact Manager</h4>\n\n      <p className=\"lead\">simple app to manage contacts easily</p>\n      <p className=\"lead\">\n        Made with <span role=\"img\">🖤</span> by Mortyflex\n      </p>\n\n      <p style={{ float: \"right\" }} className=\"text-secondary\">\n        Version 1.0.0\n      </p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <h1 className=\"display-4\">\n        {\" \"}\n        <span className=\"text-danger\">404</span> Page Not Found!\n      </h1>\n      <i className=\"fas fa-10x fa-exclamation-triangle mb-3\" />\n\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./pages/About\";\nimport NotFound from \"./pages/NotFound\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route path=\"/about\" component={About} />\n\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}